##############
# Works on hosts Linux
#

#########################
# Check the host platform

include $(BUILD_DIR)/Makefile.common.hostcheck

#########################
# Set the target platform

TARGET_PLATFORM = linux-portable_x86_64

#################
# Toolchain setup

CC  = gcc
CXX = g++
AS  = as
AR  = ar

############
# Extensions

OBJEXT = .linux-portable_x86_64.o
SOEXT  = .linux-portable_x86_64.so
LIBEXT = .linux-portable_x86_64.a

################
# Platform setup

STATIC_LINKING = 0
platform       = unix
PLATDEFS       =
PLATCFLAGS     = -m64 -fpic -fstrict-aliasing
PLATCXXFLAGS   = -m64 -fpic -fstrict-aliasing
PLATLDFLAGS    = -m64 -shared -lm -Wl,-version-script=$(BUILD_DIR)/link.T
PLATLDXFLAGS   = -m64 -shared -lm -Wl,-version-script=$(BUILD_DIR)/link.T

################
# libretro setup

RETRODEFS     = -D__LIBRETRO__
RETROCFLAGS   =
RETROCXXFLAGS =
RETROLDFLAGS  =
RETROLDXFLAGS =

#################
# Final variables

DEFINES  = $(PLATDEFS) $(COREDEFINES) $(RETRODEFS)
CFLAGS   = $(PLATCFLAGS) $(RETROCFLAGS) $(DEFINES) $(INCLUDES)
CXXFLAGS = $(PLATCXXFLAGS) $(RETROCXXFLAGS) $(DEFINES) $(INCLUDES)
LDFLAGS  = $(PLATLDFLAGS) $(RETROLDFLAGS)
LDXFLAGS = $(PLATLDXFLAGS) $(RETROLDXFLAGS)

########
# Tuning

ifneq ($(DEBUG),)
  CFLAGS   += -O0 -g
  CXXFLAGS += -O0 -g
else
  CFLAGS   += -O3 -DNDEBUG
  CXXFLAGS += -O3 -DNDEBUG
endif

ifneq ($(LOG_PERFORMANCE),)
  CFLAGS   += -DLOG_PERFORMANCE
  CXXFLAGS += -DLOG_PERFORMANCE
endif

####################################
# Variable setup for Makefile.common

CORE_DIR  ?= ..
BUILD_DIR ?= .
INCLUDES   =

include $(BUILD_DIR)/Makefile.common

###############
# Include rules

include $(BUILD_DIR)/Makefile.rules
