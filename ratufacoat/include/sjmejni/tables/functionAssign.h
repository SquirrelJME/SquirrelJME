/* -*- Mode: C; indent-tabs-mode: t; tab-width: 4 -*-
// ---------------------------------------------------------------------------
// SquirrelJME
//     Copyright (C) Stephanie Gawroriski <xer@multiphasicapps.net>
// ---------------------------------------------------------------------------
// SquirrelJME is under the GNU General Public License v3+, or later.
// See license.mkd for licensing and copyright information.
// -------------------------------------------------------------------------*/

out->GetVersion = sjme_implGetVersion;
out->DefineClass = sjme_implDefineClass;
out->FindClass = sjme_implFindClass;
out->FromReflectedMethod = sjme_implFromReflectedMethod;
out->FromReflectedField = sjme_implFromReflectedField;
out->ToReflectedMethod = sjme_implToReflectedMethod;
out->GetSuperclass = sjme_implGetSuperclass;
out->IsAssignableFrom = sjme_implIsAssignableFrom;
out->ToReflectedField = sjme_implToReflectedField;
out->Throw = sjme_implThrow;
out->ThrowNew = sjme_implThrowNew;
out->ExceptionOccurred = sjme_implExceptionOccurred;
out->ExceptionDescribe = sjme_implExceptionDescribe;
out->ExceptionClear = sjme_implExceptionClear;
out->FatalError = sjme_implFatalError;
out->PushLocalFrame = sjme_implPushLocalFrame;
out->PopLocalFrame = sjme_implPopLocalFrame;
out->NewGlobalRef = sjme_implNewGlobalRef;
out->DeleteGlobalRef = sjme_implDeleteGlobalRef;
out->DeleteLocalRef = sjme_implDeleteLocalRef;
out->IsSameObject = sjme_implIsSameObject;
out->NewLocalRef = sjme_implNewLocalRef;
out->EnsureLocalCapacity = sjme_implEnsureLocalCapacity;
out->AllocObject = sjme_implAllocObject;
out->NewObject = sjme_implNewObject;
out->NewObjectV = sjme_implNewObjectV;
out->NewObjectA = sjme_implNewObjectA;
out->GetObjectClass = sjme_implGetObjectClass;
out->IsInstanceOf = sjme_implIsInstanceOf;
out->GetMethodID = sjme_implGetMethodID;
out->CallObjectMethod = sjme_implCallObjectMethod;
out->CallObjectMethodV = sjme_implCallObjectMethodV;
out->CallObjectMethodA = sjme_implCallObjectMethodA;
out->CallBooleanMethod = sjme_implCallBooleanMethod;
out->CallBooleanMethodV = sjme_implCallBooleanMethodV;
out->CallBooleanMethodA = sjme_implCallBooleanMethodA;
out->CallByteMethod = sjme_implCallByteMethod;
out->CallByteMethodV = sjme_implCallByteMethodV;
out->CallByteMethodA = sjme_implCallByteMethodA;
out->CallCharMethod = sjme_implCallCharMethod;
out->CallCharMethodV = sjme_implCallCharMethodV;
out->CallCharMethodA = sjme_implCallCharMethodA;
out->CallShortMethod = sjme_implCallShortMethod;
out->CallShortMethodV = sjme_implCallShortMethodV;
out->CallShortMethodA = sjme_implCallShortMethodA;
out->CallIntMethod = sjme_implCallIntMethod;
out->CallIntMethodV = sjme_implCallIntMethodV;
out->CallIntMethodA = sjme_implCallIntMethodA;
out->CallLongMethod = sjme_implCallLongMethod;
out->CallLongMethodV = sjme_implCallLongMethodV;
out->CallLongMethodA = sjme_implCallLongMethodA;
out->CallFloatMethod = sjme_implCallFloatMethod;
out->CallFloatMethodV = sjme_implCallFloatMethodV;
out->CallFloatMethodA = sjme_implCallFloatMethodA;
out->CallDoubleMethod = sjme_implCallDoubleMethod;
out->CallDoubleMethodV = sjme_implCallDoubleMethodV;
out->CallDoubleMethodA = sjme_implCallDoubleMethodA;
out->CallVoidMethod = sjme_implCallVoidMethod;
out->CallVoidMethodV = sjme_implCallVoidMethodV;
out->CallVoidMethodA = sjme_implCallVoidMethodA;
out->CallNonvirtualObjectMethod = sjme_implCallNonvirtualObjectMethod;
out->CallNonvirtualObjectMethodV = sjme_implCallNonvirtualObjectMethodV;
out->CallNonvirtualObjectMethodA = sjme_implCallNonvirtualObjectMethodA;
out->CallNonvirtualBooleanMethod = sjme_implCallNonvirtualBooleanMethod;
out->CallNonvirtualBooleanMethodV = sjme_implCallNonvirtualBooleanMethodV;
out->CallNonvirtualBooleanMethodA = sjme_implCallNonvirtualBooleanMethodA;
out->CallNonvirtualByteMethod = sjme_implCallNonvirtualByteMethod;
out->CallNonvirtualByteMethodV = sjme_implCallNonvirtualByteMethodV;
out->CallNonvirtualByteMethodA = sjme_implCallNonvirtualByteMethodA;
out->CallNonvirtualCharMethod = sjme_implCallNonvirtualCharMethod;
out->CallNonvirtualCharMethodV = sjme_implCallNonvirtualCharMethodV;
out->CallNonvirtualCharMethodA = sjme_implCallNonvirtualCharMethodA;
out->CallNonvirtualShortMethod = sjme_implCallNonvirtualShortMethod;
out->CallNonvirtualShortMethodV = sjme_implCallNonvirtualShortMethodV;
out->CallNonvirtualShortMethodA = sjme_implCallNonvirtualShortMethodA;
out->CallNonvirtualIntMethod = sjme_implCallNonvirtualIntMethod;
out->CallNonvirtualIntMethodV = sjme_implCallNonvirtualIntMethodV;
out->CallNonvirtualIntMethodA = sjme_implCallNonvirtualIntMethodA;
out->CallNonvirtualLongMethod = sjme_implCallNonvirtualLongMethod;
out->CallNonvirtualLongMethodV = sjme_implCallNonvirtualLongMethodV;
out->CallNonvirtualLongMethodA = sjme_implCallNonvirtualLongMethodA;
out->CallNonvirtualFloatMethod = sjme_implCallNonvirtualFloatMethod;
out->CallNonvirtualFloatMethodV = sjme_implCallNonvirtualFloatMethodV;
out->CallNonvirtualFloatMethodA = sjme_implCallNonvirtualFloatMethodA;
out->CallNonvirtualDoubleMethod = sjme_implCallNonvirtualDoubleMethod;
out->CallNonvirtualDoubleMethodV = sjme_implCallNonvirtualDoubleMethodV;
out->CallNonvirtualDoubleMethodA = sjme_implCallNonvirtualDoubleMethodA;
out->CallNonvirtualVoidMethod = sjme_implCallNonvirtualVoidMethod;
out->CallNonvirtualVoidMethodV = sjme_implCallNonvirtualVoidMethodV;
out->CallNonvirtualVoidMethodA = sjme_implCallNonvirtualVoidMethodA;
out->GetFieldID = sjme_implGetFieldID;
out->GetObjectField = sjme_implGetObjectField;
out->GetBooleanField = sjme_implGetBooleanField;
out->GetByteField = sjme_implGetByteField;
out->GetCharField = sjme_implGetCharField;
out->GetShortField = sjme_implGetShortField;
out->GetIntField = sjme_implGetIntField;
out->GetLongField = sjme_implGetLongField;
out->GetFloatField = sjme_implGetFloatField;
out->GetDoubleField = sjme_implGetDoubleField;
out->SetObjectField = sjme_implSetObjectField;
out->SetBooleanField = sjme_implSetBooleanField;
out->SetByteField = sjme_implSetByteField;
out->SetCharField = sjme_implSetCharField;
out->SetShortField = sjme_implSetShortField;
out->SetIntField = sjme_implSetIntField;
out->SetLongField = sjme_implSetLongField;
out->SetFloatField = sjme_implSetFloatField;
out->SetDoubleField = sjme_implSetDoubleField;
out->GetStaticMethodID = sjme_implGetStaticMethodID;
out->CallStaticObjectMethod = sjme_implCallStaticObjectMethod;
out->CallStaticObjectMethodV = sjme_implCallStaticObjectMethodV;
out->CallStaticObjectMethodA = sjme_implCallStaticObjectMethodA;
out->CallStaticBooleanMethod = sjme_implCallStaticBooleanMethod;
out->CallStaticBooleanMethodV = sjme_implCallStaticBooleanMethodV;
out->CallStaticBooleanMethodA = sjme_implCallStaticBooleanMethodA;
out->CallStaticByteMethod = sjme_implCallStaticByteMethod;
out->CallStaticByteMethodV = sjme_implCallStaticByteMethodV;
out->CallStaticByteMethodA = sjme_implCallStaticByteMethodA;
out->CallStaticCharMethod = sjme_implCallStaticCharMethod;
out->CallStaticCharMethodV = sjme_implCallStaticCharMethodV;
out->CallStaticCharMethodA = sjme_implCallStaticCharMethodA;
out->CallStaticShortMethod = sjme_implCallStaticShortMethod;
out->CallStaticShortMethodV = sjme_implCallStaticShortMethodV;
out->CallStaticShortMethodA = sjme_implCallStaticShortMethodA;
out->CallStaticIntMethod = sjme_implCallStaticIntMethod;
out->CallStaticIntMethodV = sjme_implCallStaticIntMethodV;
out->CallStaticIntMethodA = sjme_implCallStaticIntMethodA;
out->CallStaticLongMethod = sjme_implCallStaticLongMethod;
out->CallStaticLongMethodV = sjme_implCallStaticLongMethodV;
out->CallStaticLongMethodA = sjme_implCallStaticLongMethodA;
out->CallStaticFloatMethod = sjme_implCallStaticFloatMethod;
out->CallStaticFloatMethodV = sjme_implCallStaticFloatMethodV;
out->CallStaticFloatMethodA = sjme_implCallStaticFloatMethodA;
out->CallStaticDoubleMethod = sjme_implCallStaticDoubleMethod;
out->CallStaticDoubleMethodV = sjme_implCallStaticDoubleMethodV;
out->CallStaticDoubleMethodA = sjme_implCallStaticDoubleMethodA;
out->CallStaticVoidMethod = sjme_implCallStaticVoidMethod;
out->CallStaticVoidMethodV = sjme_implCallStaticVoidMethodV;
out->CallStaticVoidMethodA = sjme_implCallStaticVoidMethodA;
out->GetStaticFieldID = sjme_implGetStaticFieldID;
out->GetStaticObjectField = sjme_implGetStaticObjectField;
out->GetStaticBooleanField = sjme_implGetStaticBooleanField;
out->GetStaticByteField = sjme_implGetStaticByteField;
out->GetStaticCharField = sjme_implGetStaticCharField;
out->GetStaticShortField = sjme_implGetStaticShortField;
out->GetStaticIntField = sjme_implGetStaticIntField;
out->GetStaticLongField = sjme_implGetStaticLongField;
out->GetStaticFloatField = sjme_implGetStaticFloatField;
out->GetStaticDoubleField = sjme_implGetStaticDoubleField;
out->SetStaticObjectField = sjme_implSetStaticObjectField;
out->SetStaticBooleanField = sjme_implSetStaticBooleanField;
out->SetStaticByteField = sjme_implSetStaticByteField;
out->SetStaticCharField = sjme_implSetStaticCharField;
out->SetStaticShortField = sjme_implSetStaticShortField;
out->SetStaticIntField = sjme_implSetStaticIntField;
out->SetStaticLongField = sjme_implSetStaticLongField;
out->SetStaticFloatField = sjme_implSetStaticFloatField;
out->SetStaticDoubleField = sjme_implSetStaticDoubleField;
out->NewString = sjme_implNewString;
out->GetStringLength = sjme_implGetStringLength;
out->GetStringChars = sjme_implGetStringChars;
out->ReleaseStringChars = sjme_implReleaseStringChars;
out->NewStringUTF = sjme_implNewStringUTF;
out->GetStringUTFLength = sjme_implGetStringUTFLength;
out->GetStringUTFChars = sjme_implGetStringUTFChars;
out->ReleaseStringUTFChars = sjme_implReleaseStringUTFChars;
out->GetArrayLength = sjme_implGetArrayLength;
out->NewObjectArray = sjme_implNewObjectArray;
out->GetObjectArrayElement = sjme_implGetObjectArrayElement;
out->SetObjectArrayElement = sjme_implSetObjectArrayElement;
out->NewBooleanArray = sjme_implNewBooleanArray;
out->NewByteArray = sjme_implNewByteArray;
out->NewCharArray = sjme_implNewCharArray;
out->NewShortArray = sjme_implNewShortArray;
out->NewIntArray = sjme_implNewIntArray;
out->NewLongArray = sjme_implNewLongArray;
out->NewFloatArray = sjme_implNewFloatArray;
out->NewDoubleArray = sjme_implNewDoubleArray;
out->GetBooleanArrayElements = sjme_implGetBooleanArrayElements;
out->GetByteArrayElements = sjme_implGetByteArrayElements;
out->GetCharArrayElements = sjme_implGetCharArrayElements;
out->GetShortArrayElements = sjme_implGetShortArrayElements;
out->GetIntArrayElements = sjme_implGetIntArrayElements;
out->GetLongArrayElements = sjme_implGetLongArrayElements;
out->GetFloatArrayElements = sjme_implGetFloatArrayElements;
out->GetDoubleArrayElements = sjme_implGetDoubleArrayElements;
out->ReleaseBooleanArrayElements = sjme_implReleaseBooleanArrayElements;
out->ReleaseByteArrayElements = sjme_implReleaseByteArrayElements;
out->ReleaseCharArrayElements = sjme_implReleaseCharArrayElements;
out->ReleaseShortArrayElements = sjme_implReleaseShortArrayElements;
out->ReleaseIntArrayElements = sjme_implReleaseIntArrayElements;
out->ReleaseLongArrayElements = sjme_implReleaseLongArrayElements;
out->ReleaseFloatArrayElements = sjme_implReleaseFloatArrayElements;
out->ReleaseDoubleArrayElements = sjme_implReleaseDoubleArrayElements;
out->GetBooleanArrayRegion = sjme_implGetBooleanArrayRegion;
out->GetByteArrayRegion = sjme_implGetByteArrayRegion;
out->GetCharArrayRegion = sjme_implGetCharArrayRegion;
out->GetShortArrayRegion = sjme_implGetShortArrayRegion;
out->GetIntArrayRegion = sjme_implGetIntArrayRegion;
out->GetLongArrayRegion = sjme_implGetLongArrayRegion;
out->GetFloatArrayRegion = sjme_implGetFloatArrayRegion;
out->GetDoubleArrayRegion = sjme_implGetDoubleArrayRegion;
out->SetBooleanArrayRegion = sjme_implSetBooleanArrayRegion;
out->SetByteArrayRegion = sjme_implSetByteArrayRegion;
out->SetCharArrayRegion = sjme_implSetCharArrayRegion;
out->SetShortArrayRegion = sjme_implSetShortArrayRegion;
out->SetIntArrayRegion = sjme_implSetIntArrayRegion;
out->SetLongArrayRegion = sjme_implSetLongArrayRegion;
out->SetFloatArrayRegion = sjme_implSetFloatArrayRegion;
out->SetDoubleArrayRegion = sjme_implSetDoubleArrayRegion;
out->RegisterNatives = sjme_implRegisterNatives;
out->UnregisterNatives = sjme_implUnregisterNatives;
out->MonitorEnter = sjme_implMonitorEnter;
out->MonitorExit = sjme_implMonitorExit;
out->GetJavaVM = sjme_implGetJavaVM;
out->GetStringRegion = sjme_implGetStringRegion;
out->GetStringUTFRegion = sjme_implGetStringUTFRegion;
out->GetPrimitiveArrayCritical = sjme_implGetPrimitiveArrayCritical;
out->ReleasePrimitiveArrayCritical = sjme_implReleasePrimitiveArrayCritical;
out->GetStringCritical = sjme_implGetStringCritical;
out->ReleaseStringCritical = sjme_implReleaseStringCritical;
out->NewWeakGlobalRef = sjme_implNewWeakGlobalRef;
out->DeleteWeakGlobalRef = sjme_implDeleteWeakGlobalRef;
out->ExceptionCheck = sjme_implExceptionCheck;
out->NewDirectByteBuffer = sjme_implNewDirectByteBuffer;
out->GetDirectBufferAddress = sjme_implGetDirectBufferAddress;
out->GetDirectBufferCapacity = sjme_implGetDirectBufferCapacity;
out->GetObjectRefType = sjme_implGetObjectRefType;
