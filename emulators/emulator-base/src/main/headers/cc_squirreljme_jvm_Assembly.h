/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cc_squirreljme_jvm_Assembly */

#ifndef _Included_cc_squirreljme_jvm_Assembly
#define _Included_cc_squirreljme_jvm_Assembly
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    arrayLength
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_arrayLength__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    arrayLength
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_arrayLength__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    arrayLengthSet
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_arrayLengthSet__JI
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    arrayLengthSet
 * Signature: (Ljava/lang/Object;I)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_arrayLengthSet__Ljava_lang_Object_2I
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    atomicCompareGetAndSet
 * Signature: (IIJ)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_atomicCompareGetAndSet
  (JNIEnv *, jclass, jint, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    atomicDecrementAndGet
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_atomicDecrementAndGet
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    atomicIncrement
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_atomicIncrement
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    breakpoint
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_breakpoint
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfBoolean
 * Signature: ()Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfBoolean
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfBooleanPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfBooleanPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfByte
 * Signature: ()Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfByte
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfBytePointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfBytePointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfCharacter
 * Signature: ()Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfCharacter
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfCharacterPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfCharacterPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfDouble
 * Signature: ()Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfDouble
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfDoublePointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfDoublePointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfFloat
 * Signature: ()Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfFloat
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfFloatPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfFloatPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfInteger
 * Signature: ()Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfInteger
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfIntegerPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfIntegerPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfLong
 * Signature: ()Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfLong
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfLongPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfLongPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfShort
 * Signature: ()Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfShort
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    classInfoOfShortPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_classInfoOfShortPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    doublePack
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_cc_squirreljme_jvm_Assembly_doublePack
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    doubleToRawLongBits
 * Signature: (D)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_doubleToRawLongBits
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    doubleUnpackHigh
 * Signature: (D)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_doubleUnpackHigh
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    doubleUnpackLow
 * Signature: (D)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_doubleUnpackLow
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    exceptionHandle
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_exceptionHandle
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    floatToRawIntBits
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_floatToRawIntBits
  (JNIEnv *, jclass, jfloat);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    intBitsToFloat
 * Signature: (I)F
 */
JNIEXPORT jfloat JNICALL Java_cc_squirreljme_jvm_Assembly_intBitsToFloat
  (JNIEnv *, jclass, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJI
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJII
  (JNIEnv *, jclass, jlong, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJI
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJII
  (JNIEnv *, jclass, jlong, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJI
  (JNIEnv *, jclass, jlong, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJII
  (JNIEnv *, jclass, jlong, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIIIIIII
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    longBitsToDouble
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_cc_squirreljme_jvm_Assembly_longBitsToDouble
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    longPack
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_longPack
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    longUnpackHigh
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_longUnpackHigh
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    longUnpackLow
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_longUnpackLow
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadByte
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadByte
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadInt
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadInt
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadJavaInt
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadJavaInt
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadJavaLong
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_memReadJavaLong
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadJavaShort
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadJavaShort
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadPointer
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_memReadPointer
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadShort
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadShort
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteByte
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteByte
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteInt
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteInt
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteJavaInt
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteJavaInt
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteJavaLong
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteJavaLong
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteJavaShort
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteJavaShort
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWritePointer
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWritePointer
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteShort
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteShort
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountDecrementAndGetAtomic
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountDecrementAndGetAtomic__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountDecrementAndGetAtomic
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountDecrementAndGetAtomic__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountIncrementAndGetAtomic
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountIncrementAndGetAtomic__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountIncrementAndGetAtomic
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountIncrementAndGetAtomic__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountGetAtomic
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountGetAtomic__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountGetAtomic
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountGetAtomic__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountSetAtomic
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountSetAtomic__JI
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountSetAtomic
 * Signature: (Ljava/lang/Object;I)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountSetAtomic__Ljava_lang_Object_2I
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomic
 * Signature: (JJJ)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomic__JJJ
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomic
 * Signature: (Ljava/lang/Object;JJ)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomic__Ljava_lang_Object_2JJ
  (JNIEnv *, jclass, jobject, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomic
 * Signature: (JLjava/lang/Thread;Ljava/lang/Thread;)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomic__JLjava_lang_Thread_2Ljava_lang_Thread_2
  (JNIEnv *, jclass, jlong, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomic
 * Signature: (Ljava/lang/Object;Ljava/lang/Thread;Ljava/lang/Thread;)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomic__Ljava_lang_Object_2Ljava_lang_Thread_2Ljava_lang_Thread_2
  (JNIEnv *, jclass, jobject, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomicPointer
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomicPointer__JJJ
  (JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomicPointer
 * Signature: (Ljava/lang/Object;JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomicPointer__Ljava_lang_Object_2JJ
  (JNIEnv *, jclass, jobject, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomicPointer
 * Signature: (JLjava/lang/Thread;Ljava/lang/Thread;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomicPointer__JLjava_lang_Thread_2Ljava_lang_Thread_2
  (JNIEnv *, jclass, jlong, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomicPointer
 * Signature: (Ljava/lang/Object;Ljava/lang/Thread;Ljava/lang/Thread;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomicPointer__Ljava_lang_Object_2Ljava_lang_Thread_2Ljava_lang_Thread_2
  (JNIEnv *, jclass, jobject, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerGetAtomic
 * Signature: (J)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerGetAtomic__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerGetAtomic
 * Signature: (Ljava/lang/Object;)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerGetAtomic__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerGetPointerAtomic
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerGetPointerAtomic__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerGetPointerAtomic
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerGetPointerAtomic__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerSetAtomic
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerSetAtomic__JJ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerSetAtomic
 * Signature: (JLjava/lang/Thread;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerSetAtomic__JLjava_lang_Thread_2
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerSetAtomic
 * Signature: (Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerSetAtomic__Ljava_lang_Object_2J
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerSetAtomic
 * Signature: (Ljava/lang/Object;Ljava/lang/Thread;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerSetAtomic__Ljava_lang_Object_2Ljava_lang_Thread_2
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectGetClassInfo
 * Signature: (J)Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_objectGetClassInfo__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectGetClassInfo
 * Signature: (Ljava/lang/Object;)Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_objectGetClassInfo__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectGetClassInfoPointer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_objectGetClassInfoPointer__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectGetClassInfoPointer
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_objectGetClassInfoPointer__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectSetClassInfo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_objectSetClassInfo__JJ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectSetClassInfo
 * Signature: (Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_objectSetClassInfo__Ljava_lang_Object_2J
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectSetClassInfo
 * Signature: (JLcc/squirreljme/jvm/ClassInfo;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_objectSetClassInfo__JLcc_squirreljme_jvm_ClassInfo_2
  (JNIEnv *, jclass, jlong, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectSetClassInfo
 * Signature: (Ljava/lang/Object;Lcc/squirreljme/jvm/ClassInfo;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_objectSetClassInfo__Ljava_lang_Object_2Lcc_squirreljme_jvm_ClassInfo_2
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectToPointer
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_objectToPointer
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectToPointerRefQueue
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_objectToPointerRefQueue
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    pointerToObject
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_pointerToObject
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    pointerToClassInfo
 * Signature: (J)Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_pointerToClassInfo
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    poolLoad
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_poolLoad__JI
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    poolLoad
 * Signature: (Ljava/lang/Object;I)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_poolLoad__Ljava_lang_Object_2I
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    poolStore
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_poolStore__JIJ
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    poolStore
 * Signature: (Ljava/lang/Object;IJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_poolStore__Ljava_lang_Object_2IJ
  (JNIEnv *, jclass, jobject, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refCount
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refCount__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refCount
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refCount__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refGetCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_refGetCount__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refGetCount
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_refGetCount__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refSetCount
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refSetCount__JI
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refSetCount
 * Signature: (Ljava/lang/Object;I)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refSetCount__Ljava_lang_Object_2I
  (JNIEnv *, jclass, jobject, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refUncount
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refUncount__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refUncount
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refUncount__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    returnFrame
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_returnFrame__
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    returnFrame
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_returnFrame__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    returnFrame
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_returnFrame__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    returnFrameLong
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_returnFrameLong
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sizeOfBaseArray
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sizeOfBaseArray
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sizeOfBaseObject
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sizeOfBaseObject
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sizeOfPointer
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sizeOfPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetExceptionRegister
 * Signature: ()Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetExceptionRegister
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetExceptionRegisterThrowable
 * Signature: ()Ljava/lang/Throwable;
 */
JNIEXPORT jthrowable JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetExceptionRegisterThrowable
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetExceptionRegisterPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetExceptionRegisterPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetPoolRegister
 * Signature: ()Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetPoolRegister
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetPoolRegisterPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetPoolRegisterPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetReturnRegister
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetReturnRegister
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetReturnRegisterLong
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetReturnRegisterLong
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetStaticFieldRegister
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetStaticFieldRegister
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetThreadRegister
 * Signature: ()Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetThreadRegister
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetThreadRegisterPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetThreadRegisterPointer
  (JNIEnv *, jclass);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetExceptionRegister
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetExceptionRegister__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetExceptionRegister
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetExceptionRegister__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetPoolRegister
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetPoolRegister__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetPoolRegister
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetPoolRegister__Ljava_lang_Object_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetStaticFieldRegister
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetStaticFieldRegister
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetThreadRegister
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetThreadRegister__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetThreadRegister
 * Signature: (Ljava/lang/Thread;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetThreadRegister__Ljava_lang_Thread_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__S
  (JNIEnv *, jclass, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SI
  (JNIEnv *, jclass, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SII
  (JNIEnv *, jclass, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIII
  (JNIEnv *, jclass, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__S
  (JNIEnv *, jclass, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SI
  (JNIEnv *, jclass, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SII
  (JNIEnv *, jclass, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIII
  (JNIEnv *, jclass, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (S)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__S
  (JNIEnv *, jclass, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SI
  (JNIEnv *, jclass, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SII
  (JNIEnv *, jclass, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIII
  (JNIEnv *, jclass, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (S)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__S
  (JNIEnv *, jclass, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SI
  (JNIEnv *, jclass, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SII
  (JNIEnv *, jclass, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIII
  (JNIEnv *, jclass, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (S)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__S
  (JNIEnv *, jclass, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SI
  (JNIEnv *, jclass, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SII
  (JNIEnv *, jclass, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIII
  (JNIEnv *, jclass, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (S)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__S
  (JNIEnv *, jclass, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SI
  (JNIEnv *, jclass, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SII
  (JNIEnv *, jclass, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIII
  (JNIEnv *, jclass, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIIIIIII
  (JNIEnv *, jclass, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
