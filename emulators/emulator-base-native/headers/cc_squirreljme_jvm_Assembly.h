/* -*- Mode: C++; indent-tabs-mode: t; tab-width: 4 -*- */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class cc_squirreljme_jvm_Assembly */

#ifndef _Included_cc_squirreljme_jvm_Assembly
#define _Included_cc_squirreljme_jvm_Assembly
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    arrayLength
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_arrayLength__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    arrayLength
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_arrayLength__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    arrayLengthSet
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_arrayLengthSet__JI
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    arrayLengthSet
 * Signature: (Ljava/lang/Object;I)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_arrayLengthSet__Ljava_lang_Object_2I
	(JNIEnv* env, jclass classy, jobject, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    atomicCompareGetAndSet
 * Signature: (IIJ)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_atomicCompareGetAndSet
	(JNIEnv* env, jclass classy, jint, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    atomicDecrementAndGet
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_atomicDecrementAndGet
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    atomicIncrement
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_atomicIncrement
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    breakpoint
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_breakpoint
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    doublePack
 * Signature: (II)D
 */
JNIEXPORT jdouble JNICALL Java_cc_squirreljme_jvm_Assembly_doublePack
	(JNIEnv* env, jclass classy, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    doubleToRawLongBits
 * Signature: (D)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_doubleToRawLongBits
	(JNIEnv* env, jclass classy, jdouble);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    doubleUnpackHigh
 * Signature: (D)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_doubleUnpackHigh
	(JNIEnv* env, jclass classy, jdouble);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    doubleUnpackLow
 * Signature: (D)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_doubleUnpackLow
	(JNIEnv* env, jclass classy, jdouble);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    exceptionHandle
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_exceptionHandle
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    floatToRawIntBits
 * Signature: (F)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_floatToRawIntBits
	(JNIEnv* env, jclass classy, jfloat);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    intBitsToFloat
 * Signature: (I)F
 */
JNIEXPORT jfloat JNICALL Java_cc_squirreljme_jvm_Assembly_intBitsToFloat
	(JNIEnv* env, jclass classy, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJ
	(JNIEnv* env, jclass classy, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJI
	(JNIEnv* env, jclass classy, jlong, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invoke
 * Signature: (JJIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_invoke__JJIIIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJ
	(JNIEnv* env, jclass classy, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJI
	(JNIEnv* env, jclass classy, jlong, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeV
 * Signature: (JJIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_invokeV__JJIIIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJ
	(JNIEnv* env, jclass classy, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJI
	(JNIEnv* env, jclass classy, jlong, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    invokeVL
 * Signature: (JJIIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_invokeVL__JJIIIIIIII
	(JNIEnv* env, jclass classy, jlong, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    longBitsToDouble
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_cc_squirreljme_jvm_Assembly_longBitsToDouble
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    longPack
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_longPack
	(JNIEnv* env, jclass classy, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    longUnpackHigh
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_longUnpackHigh
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    longUnpackLow
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_longUnpackLow
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadByte
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadByte
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadInt
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadInt
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadJavaInt
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadJavaInt
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadJavaLong
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_memReadJavaLong
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadJavaShort
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadJavaShort
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadPointer
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_memReadPointer
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memReadShort
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_memReadShort
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteByte
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteByte
	(JNIEnv* env, jclass classy, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteInt
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteInt
	(JNIEnv* env, jclass classy, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteJavaInt
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteJavaInt
	(JNIEnv* env, jclass classy, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteJavaLong
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteJavaLong
	(JNIEnv* env, jclass classy, jlong, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteJavaShort
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteJavaShort
	(JNIEnv* env, jclass classy, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWritePointer
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWritePointer
	(JNIEnv* env, jclass classy, jlong, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    memWriteShort
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_memWriteShort
	(JNIEnv* env, jclass classy, jlong, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountDecrementAndGetAtomic
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountDecrementAndGetAtomic__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountDecrementAndGetAtomic
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountDecrementAndGetAtomic__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountIncrementAndGetAtomic
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountIncrementAndGetAtomic__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountIncrementAndGetAtomic
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountIncrementAndGetAtomic__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountGetAtomic
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountGetAtomic__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountGetAtomic
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountGetAtomic__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountSetAtomic
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountSetAtomic__JI
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorCountSetAtomic
 * Signature: (Ljava/lang/Object;I)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorCountSetAtomic__Ljava_lang_Object_2I
	(JNIEnv* env, jclass classy, jobject, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomic
 * Signature: (JJJ)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomic__JJJ
	(JNIEnv* env, jclass classy, jlong, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomic
 * Signature: (Ljava/lang/Object;JJ)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomic__Ljava_lang_Object_2JJ
	(JNIEnv* env, jclass classy, jobject, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomic
 * Signature: (JLjava/lang/Thread;Ljava/lang/Thread;)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomic__JLjava_lang_Thread_2Ljava_lang_Thread_2
	(JNIEnv* env, jclass classy, jlong, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomic
 * Signature: (Ljava/lang/Object;Ljava/lang/Thread;Ljava/lang/Thread;)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomic__Ljava_lang_Object_2Ljava_lang_Thread_2Ljava_lang_Thread_2
	(JNIEnv* env, jclass classy, jobject, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomicPointer
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomicPointer__JJJ
	(JNIEnv* env, jclass classy, jlong, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomicPointer
 * Signature: (Ljava/lang/Object;JJ)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomicPointer__Ljava_lang_Object_2JJ
	(JNIEnv* env, jclass classy, jobject, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomicPointer
 * Signature: (JLjava/lang/Thread;Ljava/lang/Thread;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomicPointer__JLjava_lang_Thread_2Ljava_lang_Thread_2
	(JNIEnv* env, jclass classy, jlong, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerCompareGetAndSetAtomicPointer
 * Signature: (Ljava/lang/Object;Ljava/lang/Thread;Ljava/lang/Thread;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerCompareGetAndSetAtomicPointer__Ljava_lang_Object_2Ljava_lang_Thread_2Ljava_lang_Thread_2
	(JNIEnv* env, jclass classy, jobject, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerGetAtomic
 * Signature: (J)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerGetAtomic__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerGetAtomic
 * Signature: (Ljava/lang/Object;)Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerGetAtomic__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerGetPointerAtomic
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerGetPointerAtomic__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerGetPointerAtomic
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerGetPointerAtomic__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerSetAtomic
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerSetAtomic__JJ
	(JNIEnv* env, jclass classy, jlong, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerSetAtomic
 * Signature: (JLjava/lang/Thread;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerSetAtomic__JLjava_lang_Thread_2
	(JNIEnv* env, jclass classy, jlong, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerSetAtomic
 * Signature: (Ljava/lang/Object;J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerSetAtomic__Ljava_lang_Object_2J
	(JNIEnv* env, jclass classy, jobject, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    monitorOwnerSetAtomic
 * Signature: (Ljava/lang/Object;Ljava/lang/Thread;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_monitorOwnerSetAtomic__Ljava_lang_Object_2Ljava_lang_Thread_2
	(JNIEnv* env, jclass classy, jobject, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectToPointer
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_objectToPointer
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    objectToPointerRefQueue
 * Signature: (Ljava/lang/Object;)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_objectToPointerRefQueue
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    pointerToObject
 * Signature: (J)Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_pointerToObject
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    pointerToClassInfo
 * Signature: (J)Lcc/squirreljme/jvm/ClassInfo;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_pointerToClassInfo
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    poolLoad
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_poolLoad__JI
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    poolLoad
 * Signature: (Ljava/lang/Object;I)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_poolLoad__Ljava_lang_Object_2I
	(JNIEnv* env, jclass classy, jobject, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    poolStore
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_poolStore__JIJ
	(JNIEnv* env, jclass classy, jlong, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    poolStore
 * Signature: (Ljava/lang/Object;IJ)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_poolStore__Ljava_lang_Object_2IJ
	(JNIEnv* env, jclass classy, jobject, jint, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refCount
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refCount__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refCount
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refCount__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refGetCount
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_refGetCount__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refGetCount
 * Signature: (Ljava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_refGetCount__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refSetCount
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refSetCount__JI
	(JNIEnv* env, jclass classy, jlong, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refSetCount
 * Signature: (Ljava/lang/Object;I)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refSetCount__Ljava_lang_Object_2I
	(JNIEnv* env, jclass classy, jobject, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refUncount
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refUncount__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    refUncount
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_refUncount__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    returnFrame
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_returnFrame__
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    returnFrame
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_returnFrame__I
	(JNIEnv* env, jclass classy, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    returnFrame
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_returnFrame__II
	(JNIEnv* env, jclass classy, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    returnFrameLong
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_returnFrameLong
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sizeOfBaseArray
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sizeOfBaseArray
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sizeOfBaseObject
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sizeOfBaseObject
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sizeOfPointer
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sizeOfPointer
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetExceptionRegister
 * Signature: ()Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetExceptionRegister
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetExceptionRegisterThrowable
 * Signature: ()Ljava/lang/Throwable;
 */
JNIEXPORT jthrowable JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetExceptionRegisterThrowable
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetExceptionRegisterPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetExceptionRegisterPointer
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetPoolRegister
 * Signature: ()Ljava/lang/Object;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetPoolRegister
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetPoolRegisterPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetPoolRegisterPointer
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetReturnRegister
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetReturnRegister
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetReturnRegisterLong
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetReturnRegisterLong
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetStaticFieldRegister
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetStaticFieldRegister
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetThreadRegister
 * Signature: ()Ljava/lang/Thread;
 */
JNIEXPORT jobject JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetThreadRegister
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialGetThreadRegisterPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_specialGetThreadRegisterPointer
	(JNIEnv* env, jclass classy);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetExceptionRegister
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetExceptionRegister__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetExceptionRegister
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetExceptionRegister__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetPoolRegister
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetPoolRegister__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetPoolRegister
 * Signature: (Ljava/lang/Object;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetPoolRegister__Ljava_lang_Object_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetStaticFieldRegister
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetStaticFieldRegister
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetThreadRegister
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetThreadRegister__J
	(JNIEnv* env, jclass classy, jlong);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    specialSetThreadRegister
 * Signature: (Ljava/lang/Thread;)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_specialSetThreadRegister__Ljava_lang_Thread_2
	(JNIEnv* env, jclass classy, jobject);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__S
	(JNIEnv* env, jclass classy, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SI
	(JNIEnv* env, jclass classy, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SII
	(JNIEnv* env, jclass classy, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCall
 * Signature: (SIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCall__SIIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__S
	(JNIEnv* env, jclass classy, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SI)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SI
	(JNIEnv* env, jclass classy, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SII
	(JNIEnv* env, jclass classy, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallP
 * Signature: (SIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallP__SIIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (S)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__S
	(JNIEnv* env, jclass classy, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SI
	(JNIEnv* env, jclass classy, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SII
	(JNIEnv* env, jclass classy, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPV
 * Signature: (SIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPV__SIIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (S)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__S
	(JNIEnv* env, jclass classy, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SI
	(JNIEnv* env, jclass classy, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SII
	(JNIEnv* env, jclass classy, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallPVL
 * Signature: (SIIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallPVL__SIIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (S)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__S
	(JNIEnv* env, jclass classy, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SI)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SI
	(JNIEnv* env, jclass classy, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SII
	(JNIEnv* env, jclass classy, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallV
 * Signature: (SIIIIIIII)I
 */
JNIEXPORT jint JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallV__SIIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (S)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__S
	(JNIEnv* env, jclass classy, jshort);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SI)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SI
	(JNIEnv* env, jclass classy, jshort, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SII
	(JNIEnv* env, jclass classy, jshort, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     cc_squirreljme_jvm_Assembly
 * Method:    sysCallVL
 * Signature: (SIIIIIIII)J
 */
JNIEXPORT jlong JNICALL Java_cc_squirreljme_jvm_Assembly_sysCallVL__SIIIIIIII
	(JNIEnv* env, jclass classy, jshort, jint, jint, jint, jint, jint, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
