# ---------------------------------------------------------------------------
# Multi-Phasic Applications: SquirrelJME
#     Copyright (C) Stephanie Gawroriski <xer@multiphasicapps.net>
#     Copyright (C) Multi-Phasic Applications <multiphasicapps.net>
# ---------------------------------------------------------------------------
# SquirrelJME is under the GNU General Public License v3, or later.
# See license.mkd for licensing and copyright information.
# ---------------------------------------------------------------------------
# DESCRIPTION: CircleCI Build Configuration

version: 2.1
executors:
  buildenv:
    docker:
      - image: circleci/openjdk:8-jdk

orbs:
  win: circleci/windows@2.2.0

jobs:
  build_windows:
    executor:
      name: win/default
      shell: cmd.exe
    steps:
      - checkout
      - run:
          name: Gradle Build and Test
          command: gradlew build test --continue --parallel
          shell: cmd.exe
      - run:
          name: Save test results
          command: |
            mkdir -p /c/users/circleci/test-results/junit
            /usr/bin/find . -type f -regex '.*/build/test-results/.*xml' -exec cp {} /c/users/circleci/test-results/junit/ \;
          when: always
          shell: bash.exe
      - store_test_results:
          path: c:\users\circleci\test-results
      - store_artifacts:
          path: c:\users\circleci\test-results
  build_linux:
    executor: buildenv
    steps:
      - checkout
      - run:
          name: Gradle Build and Test
          command: ./gradlew build test --continue --parallel
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex '.*/build/test-results/.*xml' -exec cp {} ~/test-results/junit/ \;
          when: always
      - persist_to_workspace:
          root: .
          paths:
            - '.gradle/*'
            - 'build/*'
            - 'buildSrc/.gradle/*'
            - 'buildSrc/build/*'
            - 'emulators/build/*'
            - 'emulators/*/build/*'
            - 'modules/build/*'
            - 'modules/*/build/*'
            - 'tools/build/*'
            - 'tools/*/build/*'
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  build_macosx:
    macos:
      xcode: 11.3.0
    steps:
      - checkout
      - run:
          name: Update Brew
          command: brew update
      - run:
          name: Install Gradle and OpenJDK 11
          command: brew install gradle openjdk@11
      - run:
          name: Gradle Build and Test
          command: ./gradlew build test --continue --parallel
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex '.*/build/test-results/.*xml' -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  constuct_testjars:
    executor: buildenv
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Constuct Test JARs
          command: ./gradlew testJar --continue --parallel
      - persist_to_workspace:
          root: .
          paths:
            - '.gradle/*'
            - 'build/*'
            - 'buildSrc/.gradle/*'
            - 'buildSrc/build/*'
            - 'emulators/build/*'
            - 'emulators/*/build/*'
            - 'modules/build/*'
            - 'modules/*/build/*'
            - 'tools/build/*'
            - 'tools/*/build/*'
  test_springcoat:
    executor: buildenv
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: SpringCoat Tests
          command: |
            if ! timeout 12m ./gradlew testSpringCoat --continue --parallel
            then
              echo "SpringCoat testing failed, ignoring..." 1>&2
            fi
          no_output_timeout: 4m
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex '.*/springcoat/junit-reports/.*xml' -exec cp {} ~/test-results/junit/ \;
          when: always
      - run:
          name: Save snapshots
          command: |
            mkdir -p ~/test-results/nps/
            find . -type f -regex '.*/springcoat/nps/.*nps' -exec cp {} ~/test-results/nps/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - store_artifacts:
          path: ~/test-results/nps
  test_summercoat:
    executor: buildenv
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: SummerCoat Tests
          command: |
            if ! timeout 12m ./gradlew testSummerCoat --continue --parallel
            then
              echo "SummerCoat testing failed, ignoring..." 1>&2
            fi
          no_output_timeout: 4m
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex '.*/summercoat/junit-reports/.*xml' -exec cp {} ~/test-results/junit/ \;
          when: always
      - run:
          name: Save snapshots
          command: |
            mkdir -p ~/test-results/nps/
            find . -type f -regex '.*/summercoat/nps/.*nps' -exec cp {} ~/test-results/nps/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - store_artifacts:
          path: ~/test-results/nps

workflows:
  version: 2
  tests:
    jobs:
      - build_windows
      - build_linux
      - build_macosx
      - constuct_testjars:
          requires:
            - build_linux
      - test_springcoat:
          requires:
            - constuct_testjars
      - test_summercoat:
          requires:
            - constuct_testjars
