# ---------------------------------------------------------------------------
# Multi-Phasic Applications: SquirrelJME
#     Copyright (C) Stephanie Gawroriski <xer@multiphasicapps.net>
#     Copyright (C) Multi-Phasic Applications <multiphasicapps.net>
# ---------------------------------------------------------------------------
# SquirrelJME is under the GNU General Public License v3, or later.
# See license.mkd for licensing and copyright information.
# ---------------------------------------------------------------------------
# DESCRIPTION: CircleCI Build Configuration

version: 2.1
executors:
  buildenv:
    docker:
      - image: circleci/openjdk:8-jdk

orbs:
  win: circleci/windows@2.2.0

jobs:
  build_windows:
    executor:
      name: win/default
      shell: cmd.exe
    steps:
      - checkout
      - run:
          name: Gradle Build
          command: gradlew build test --continue --parallel
          shell: cmd.exe
      - run:
          name: Save test results
          command: |
            mkdir -p /c/users/circleci/test-results/junit
            /usr/bin/find . -type f -regex '.*/build/test-results/.*xml' -exec cp {} /c/users/circleci/test-results/junit/ \;
          when: always
          shell: bash.exe
      - store_test_results:
          path: c:\users\circleci\test-results
      - store_artifacts:
          path: c:\users\circleci\test-results
  build_linux:
    executor: buildenv
    steps:
      - checkout
      - run:
          name: Gradle Build
          command: ./gradlew build test --continue --parallel
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex '.*/build/test-results/.*xml' -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  build_macosx:
    macos:
      xcode: 11.3.0
    steps:
      - checkout
      - run:
          name: Update Brew
          command: brew update
      - run:
          name: Install Gradle and OpenJDK 11
          command: brew install gradle openjdk@11
      - run:
          name: Gradle Build
          command: ./gradlew build test --continue --parallel
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex '.*/build/test-results/.*xml' -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  test_springcoat:
    executor: buildenv
    steps:
      - checkout
      - run:
          name: Gradle Build
          command: ./gradlew testSpringCoat --continue --parallel
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex '.*/build/test-results/.*xml' -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

workflows:
  version: 2
  tests:
    jobs:
      - build_windows
      - build_linux
      - build_macosx
      - test_springcoat
