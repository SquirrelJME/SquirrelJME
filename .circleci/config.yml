# ---------------------------------------------------------------------------
# Multi-Phasic Applications: SquirrelJME
#     Copyright (C) Stephanie Gawroriski <xer@multiphasicapps.net>
#     Copyright (C) Multi-Phasic Applications <multiphasicapps.net>
# ---------------------------------------------------------------------------
# SquirrelJME is under the GNU General Public License v3, or later.
# See license.mkd for licensing and copyright information.
# ---------------------------------------------------------------------------
# DESCRIPTION: CircleCI Build Configuration

version: 2.1
executors:
  buildenv:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/squirreljme-build

commands:
  initialize_buildenv:
    description: "Initializes the build environment"
    steps:
      - checkout:
          path: ~/squirreljme
      - run:
          name: Setup directory
          command: mkdir -p ~/squirreljme-build

jobs:
  build_javase:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Shade JavaSE
          command: ~/squirreljme/build.sh dist javase
  build_javame:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Shade JavaME
          command: ~/squirreljme/build.sh dist javame
  tests_springcoat:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f spjut/springcoat/results.xml springcoat.nps
      - run:
          name: Create test directory
          command: mkdir -p spjut/springcoat
      - run:
          name: Running SpringCoat VM
          command: ~/squirreljme/build.sh launch -v springcoat -n springcoat.nps -Dcc.squirreljme.debug=false tac-runner > spjut/springcoat/results.xml
      - store_test_results:
          path: spjut
      - store_artifacts:
          path: springcoat.nps
          destination: /nps/springcoat.nps
  tests_flowercoat:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f fljut/flowercoat/results.xml flowercoat.nps
      - run:
          name: Create test directory
          command: mkdir -p fljut/flowercoat
      - run:
          name: Running FlowerCoat VM
          command: ~/squirreljme/build.sh launch -v flowercoat -n flowercoat.nps -Dcc.squirreljme.debug=false tac-runner > fljut/flowercoat/results.xml
      - store_test_results:
          path: fljut
      - store_artifacts:
          path: flowercoat.nps
          destination: /nps/flowercoat.nps
  tests_summercoat:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f sujut/summercoat/results.xml summercoat.nps
      - run:
          name: Create test directory
          command: mkdir -p sujut/summercoat
      - run:
          name: Running SummerCoat VM
          command: ~/squirreljme/build.sh launch -v summercoat -n summercoat.nps -Dcc.squirreljme.debug=false tac-runner > sujut/summercoat/results.xml
      - store_test_results:
          path: sujut
      - store_artifacts:
          path: summercoat.nps
          destination: /nps/summercoat.nps

workflows:
  version: 2
  tests:
    jobs:
      - build_javase
      - build_javame
      - tests_springcoat:
          requires:
            - build_javase
      - tests_summercoat:
          requires:
            - build_javase

