# ---------------------------------------------------------------------------
# Multi-Phasic Applications: SquirrelJME
#     Copyright (C) Stephanie Gawroriski <xer@multiphasicapps.net>
#     Copyright (C) Multi-Phasic Applications <multiphasicapps.net>
# ---------------------------------------------------------------------------
# SquirrelJME is under the GNU General Public License v3, or later.
# See license.mkd for licensing and copyright information.
# ---------------------------------------------------------------------------
# DESCRIPTION: CircleCI Build Configuration

version: 2.1
executors:
  buildenv:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/squirreljme-build

orbs:
  win: circleci/windows@2.2.0

commands:
  initialize_buildenv:
    description: "Initializes the build environment"
    steps:
      - checkout:
          path: ~/squirreljme
      - run:
          name: Setup directory
          command: mkdir -p ~/squirreljme-build
      - run:
          name: Install build-essential
          command: sudo apt-get install --no-install-recommends -y build-essential || true
      - run:
          name: Install crossbuild-essential-powerpc
          command: sudo apt-get install --no-install-recommends -y crossbuild-essential-powerpc || true
      - run:
          name: Install crossbuild-essential-mips
          command: sudo apt-get install --no-install-recommends -y crossbuild-essential-mips || true
      - run:
          name: Install crossbuild-essential-mipsel
          command: sudo apt-get install --no-install-recommends -y crossbuild-essential-mipsel || true
      - run:
          name: Install qemu-user
          command: sudo apt-get install --no-install-recommends -y qemu-user || true
      - run:
          name: Install unzip
          command: sudo apt-get install --no-install-recommends -y unzip || true

jobs:
  build_javase_windows:
    executor:
      name: win/default
      shell: cmd.exe
    steps:
      - checkout:
          path: c:\users\circleci\squirreljme
      - run:
          name: Make build directory
          command: mkdir c:\users\circleci\squirreljme-build
      - run:
          name: Go to build directory
          command: cd c:\users\circleci\squirreljme-build
      - run:
          name: Perform Shaded Java SE Build
          command: c:\users\circleci\squirreljme\build.cmd dist javase
  build_javase:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Shade JavaSE
          command: ~/squirreljme/build.sh dist javase
  build_javame:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Shade JavaME
          command: ~/squirreljme/build.sh dist javame
  build_summercoatrom:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Building SummerCoat ROM
          command: ~/squirreljme/build.sh dist summercoatrom
  tests_baseline:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f bljut/baseline/results.xml baseline.nps
      - run:
          name: Create test directory
          command: mkdir -p bljut/baseline
      - run:
          name: Running Baseline Tests
          command: ~/squirreljme/utils-dev/hostedlaunch.sh tac-runner > bljut/baseline/results.xml
      - store_test_results:
          path: bljut
  tests_springcoat:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f spjut/springcoat/results.xml springcoat.nps
      - run:
          name: Create test directory
          command: mkdir -p spjut/springcoat
      - run:
          name: Running SpringCoat VM
          command: ~/squirreljme/build.sh launch -v springcoat -n springcoat.nps -Dcc.squirreljme.debug=false tac-runner > spjut/springcoat/results.xml
      - store_test_results:
          path: spjut
      - store_artifacts:
          path: springcoat.nps
          destination: /nps/springcoat.nps
  tests_summercoat:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f sujut/summercoat/results.xml summercoat.nps
      - run:
          name: Create test directory
          command: mkdir -p sujut/summercoat
      - run:
          name: Running SummerCoat VM
          command: ~/squirreljme/build.sh launch -v summercoat -n summercoat.nps -Dcc.squirreljme.debug=false tac-runner > sujut/summercoat/results.xml
      - store_test_results:
          path: sujut
      - store_artifacts:
          path: summercoat.nps
          destination: /nps/summercoat.nps
  tests_summercoatrom:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f svjut/summercoatrom/results.xml summercoatrom.nps
      - run:
          name: Create test directory
          command: mkdir -p svjut/summercoatrom
      - run:
          name: Build SummerCoat ROM with tests
          command: ~/squirreljme/build.sh dist summercoatrom-test
      - run:
          name: Extract distribution
          command: unzip -o squirreljme-summercoatrom-test.zip
      - run:
          name: Running SummerCoat VM
          command: ~/squirreljme/build.sh launch -v summercoat -n summercoatrom.nps -Dcc.squirreljme.debug=false -Dcc.squirreljme.romfile=squirreljme.sqc tac-runner > svjut/summercoatrom/results.xml
      - store_test_results:
          path: svjut
      - store_artifacts:
          path: summercoatrom.nps
          destination: /nps/summercoatrom.nps
  tests_ratufacoat_default:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f rdjut/ratufacoatdef/results.xml
      - run:
          name: Create test directory
          command: mkdir -p rdjut/ratufacoatdef
      - run:
          name: Build SummerCoat ROM with tests
          command: ~/squirreljme/build.sh dist summercoatrom-test
      - run:
          name: Extract distribution
          command: unzip -o squirreljme-summercoatrom-test.zip
      - run:
          name: Cleaning RatufaCoat VM (Default)
          command: make -C ~/squirreljme/ratufacoat -f ~/squirreljme/ratufacoat/makefile clean
      - run:
          name: Building RatufaCoat VM (Default)
          command: make -C ~/squirreljme/ratufacoat -f ~/squirreljme/ratufacoat/makefile squirreljme-stdc
      - run:
          name: Running RatufaCoat VM (Default)
          command: ~/squirreljme/ratufacoat/squirreljme-stdc -Dcc.squirreljme.autolaunch=tac-runner > rdjut/ratufacoatdef/results.xml
      - store_test_results:
          path: rdjut
  tests_ratufacoat_ppc:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f rpjut/ratufacoatppc/results.xml
      - run:
          name: Create test directory
          command: mkdir -p rpjut/ratufacoatppc
      - run:
          name: Build SummerCoat ROM with tests
          command: ~/squirreljme/build.sh dist summercoatrom-test
      - run:
          name: Extract distribution
          command: unzip -o squirreljme-summercoatrom-test.zip
      - run:
          name: Cleaning RatufaCoat VM (PowerPC)
          command: make -C ~/squirreljme/ratufacoat -f ~/squirreljme/ratufacoat/makefile clean
      - run:
          name: Building RatufaCoat VM (PowerPC)
          command: make -C ~/squirreljme/ratufacoat -f ~/squirreljme/ratufacoat/makefile squirreljme-stdc CC=powerpc-linux-gnu-gcc CFLAGS='-static -DSJME_BIG_ENDIAN'
      - run:
          name: Running RatufaCoat VM (PowerPC)
          command: qemu-ppc ~/squirreljme/ratufacoat/squirreljme-stdc -Dcc.squirreljme.autolaunch=tac-runner > rpjut/ratufacoatppc/results.xml
      - store_test_results:
          path: rpjut
  tests_ratufacoat_mips:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f rmjut/ratufacoatmips/results.xml
      - run:
          name: Create test directory
          command: mkdir -p rmjut/ratufacoatmips
      - run:
          name: Build SummerCoat ROM with tests
          command: ~/squirreljme/build.sh dist summercoatrom-test
      - run:
          name: Extract distribution
          command: unzip -o squirreljme-summercoatrom-test.zip
      - run:
          name: Cleaning RatufaCoat VM (MIPS EB)
          command: make -C ~/squirreljme/ratufacoat -f ~/squirreljme/ratufacoat/makefile clean
      - run:
          name: Building RatufaCoat VM (MIPS EB)
          command: make -C ~/squirreljme/ratufacoat -f ~/squirreljme/ratufacoat/makefile squirreljme-stdc CC=mips-linux-gnu-gcc CFLAGS='-static -DSJME_BIG_ENDIAN'
      - run:
          name: Running RatufaCoat VM (MIPS EB)
          command: qemu-mips ~/squirreljme/ratufacoat/squirreljme-stdc -Dcc.squirreljme.autolaunch=tac-runner > rmjut/ratufacoatmips/results.xml
      - store_test_results:
          path: rmjut
  tests_ratufacoat_mipsel:
    executor: buildenv
    steps:
      - initialize_buildenv
      - run:
          name: Clear old test results and snapshot
          command: rm -f rnjut/ratufacoatmipsel/results.xml
      - run:
          name: Create test directory
          command: mkdir -p rnjut/ratufacoatmipsel
      - run:
          name: Build SummerCoat ROM with tests
          command: ~/squirreljme/build.sh dist summercoatrom-test
      - run:
          name: Extract distribution
          command: unzip -o squirreljme-summercoatrom-test.zip
      - run:
          name: Cleaning RatufaCoat VM (MIPS EL)
          command: make -C ~/squirreljme/ratufacoat -f ~/squirreljme/ratufacoat/makefile clean
      - run:
          name: Building RatufaCoat VM (MIPS EL)
          command: make -C ~/squirreljme/ratufacoat -f ~/squirreljme/ratufacoat/makefile squirreljme-stdc CC=mipsel-linux-gnu-gcc CFLAGS='-static -DSJME_LITTLE_ENDIAN'
      - run:
          name: Running RatufaCoat VM (MIPS EL)
          command: qemu-mipsel ~/squirreljme/ratufacoat/squirreljme-stdc -Dcc.squirreljme.autolaunch=tac-runner > rnjut/ratufacoatmipsel/results.xml
      - store_test_results:
          path: rnjut

workflows:
  version: 2
  tests:
    jobs:
      - build_javase
      - build_javame
      - build_javase_windows:
          requires:
            - build_javase
      - tests_baseline:
          requires:
            - build_javase
      - build_summercoatrom:
          requires:
            - build_javase
            - build_javame
      - tests_springcoat:
          requires:
            - build_javase
      - tests_summercoat:
          requires:
            - build_javase
      - tests_summercoatrom:
          requires:
            - build_summercoatrom
      - tests_ratufacoat_default:
          requires:
            - build_summercoatrom
      - tests_ratufacoat_ppc:
          requires:
            - build_summercoatrom
      - tests_ratufacoat_mips:
          requires:
            - build_summercoatrom
      - tests_ratufacoat_mipsel:
          requires:
            - build_summercoatrom

