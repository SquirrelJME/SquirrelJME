import org.gradle.plugins.ide.idea.model.IdeaLanguageLevel

import java.nio.file.Files
import java.nio.file.Paths

plugins {
	id "java-library"
	id "idea"
}

apply plugin: "com.github.johnrengelman.shadow"

// Say this is a Java 8 project
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

jar {
}

shadowJar {
	dependsOn jar
}

// On Java 8 we have tools.jar for this
FileCollection toolsJar	= files(Paths.get("${System.properties['java.home']}")
	.getParent().resolve("lib").resolve("tools.jar"))
if (!Files.exists(toolsJar.singleFile.toPath())) {
	if (JavaVersion.current() >= JavaVersion.VERSION_1_9) {
		// Windows/Linux
		toolsJar = files(Paths.get("${System.properties['java.home']}")
			.getParent().resolve("jmods").resolve("jdk.javadoc.jmod"))
		
		// Mac OS
		if (!Files.exists(toolsJar.singleFile.toPath())) {
			toolsJar = files(Paths.get("${System.properties['java.home']}")
				.resolve("jmods").resolve("jdk.javadoc.jmod"))
		}
	}
}

dependencies {
	// Depend directly on tools.jar so it is brought in, or the module
	implementation files(toolsJar)
	
	implementation project(":modules:io-file")
	implementation project(":modules:json")
	implementation project(":modules:markdown-writer")
	implementation project(":modules:tool-classfile")
}

