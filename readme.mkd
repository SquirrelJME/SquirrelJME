# SquirrelJME

**SquirrelJME** is intended to be a Java ME 8 compatible environment for
strange and many other devices. That is, you would be able to have a Java
environment on a wide range of _Internet of Things_ devices, older computers
(such as the _Amiga_), embedded devices, and mobile devices from old to new.
It intends to be 99.9% compatible with Java ME 8 and older J2ME standards. It
should be able to run a wide range of older J2ME software which would enable
this software to be used for archival purposes. It is written purely in Java
and requires only a Java compiler and virtual machine for it to be built.

Note that **SquirrelJME** is not a Java SE virtual machine nor does it intend
to be one at all. As such, it will not be able to run desktop software unless
it is ported to Java ME. However some programs may run since Java ME is a
subset of Java SE, so provided the desktop software does not use what is
missing or not supported it will run.

 * Copyright (C) 2013-2019 Stephanie Gawroriski
   <xer@multiphasicapps.net>
 * "SquirrelJME" and "Lex" are trademarked by Stephanie Gawroriski 2016-2019
 * _Lex_ and The _SquirrelJME_ Logo were illustrated by...
   * Kat Adam-MacEwen
   * Kat@CMYKat Designs & Illustrations <http://www.cmykat-designs.com/>

You may support me on [Patreon](https://www.patreon.com/SquirrelJME)!

Badges:

 * [![CircleCI](
   https://circleci.com/gh/XerTheSquirrel/SquirrelJME/tree/trunk.png)](
   https://circleci.com/gh/XerTheSquirrel/SquirrelJME/tree/trunk)

Information:

 * [Code of Conduct](code-of-conduct.mkd)
 * [License](license.mkd)
   * _Source_: GNU General Public License, Version 3 or later
   * _Assets_: Creative Commons CC-BY-SA 4.0
   * _Fonts_ : SIL Open Font License Version 1.1
 * [Contributing to SquirrelJME](contributing.mkd)
 * _End-User Documents_
   * [Building](building.mkd)
   * [Changelog](changelog.mkd)
   * [Compatibility](compatibility.mkd)
   * [History](history.mkd)
   * [Release Route](route.mkd)
   * [Usage](usage.mkd)
 * _Developer Resources_
   * [CircleCI Status](
     https://circleci.com/gh/XerTheSquirrel/SquirrelJME/tree/trunk)
   * [Developer Guide](developer-guide.mkd)
   * [Developer Notes](assets/developer-notes/index.mkd)
   * [Design Document](design.mkd)
   * [Project Scope](scope.mkd)
   * [SquirrelJME As A Runtime](asruntime.mkd)
   * [CLDC 1.8 API (docs.oracle.com)](
     https://docs.oracle.com/javame/8.0/api/cldc/api/overview-summary.html)

Also check out SquirrelJME's sister project _Mu_ at:

 * <https://github.com/meepingsnesroms/Mu>

## I Am Open For Hiring

**SquirrelJME** is a hobby project (which means I work on it in my spare time)
and as such does not sustain me monetarily. If you do like my work please also
be advised that I am available for hire to work on a number of other projects
potentially. Most of my experience for languages is in _C_, _Java_, and
_POSIX Shell_. Although I do not mainly use other languages they can be learned
by adapting my current experience with those languages. **SquirrelJME** itself
mostly relates to embedded, compiler, and Java development. I prefer remote
development as it allows me to work from home rather than spending time
commuting every day (which wastes time). Interest can be e-mailed to me
(Stephanie Gawroriski) at <xerthesquirrel@gmail.com>.

## Repository

 * [Online repository](http://squirreljme.cc/)
   ([HTTPS](https://squirreljme.cc/),
   [Tor (A)](http://squirrelzarhffxz.onion/),
   [Tor (B)](http://squirrelmfbf2udn.onion/))
 * SquirrelJME uses `fossil` <http://fossil-scm.org/>.
 * The repository may be cloned using Fossil:
   * One of these commands:
     * `fossil clone -u http://squirreljme.cc/ squirreljme.fossil`
     * `fossil clone -u https://squirreljme.cc/ squirreljme.fossil`
     * `fossil clone -u http://squirrelzarhffxz.onion/ squirreljme.fossil`
     * `fossil clone -u http://squirrelmfbf2udn.onion/ squirreljme.fossil`
   * `mkdir squirreljme`
   * `cd squirreljme`
   * `fossil open ../squirreljme.fossil`
 * Alternatively via [GitHub](https://github.com/XerTheSquirrel/SquirrelJME):
   * `git clone https://github.com/XerTheSquirrel/SquirrelJME`
   * `cd SquirrelJME`
 * Trunk Source Snapshot (Main website or `fossil serve` only):
   * [TAR.GZ](/tarball/squirreljme-trunk.tar.gz?uuid=trunk)
   * [ZIP](/zip/squirreljme-trunk.zip?uuid=trunk)

## Links

 * [My Portfolio](https://shadowtail.dev/)
 * [My Public PGP Key](public-key.gpg.mkd)
 * Locations where you can get support:
   * [Discord](https://discord.gg/9PkMMKt)
 * Front facing social media:
   * [YouTube](
     https://www.youtube.com/playlist?list=PLpBpyrtWn1U3motx3AUOm70qG5zraCepD)
 * Personal Accounts (If you wish to contact me this way)
   * [GitHub](https://github.com/XerTheSquirrel/)
   * [Keybase](https://keybase.io/xerthesquirrel)
   * [LinkedIn](https://www.linkedin.com/in/xerthesquirrel/)
   * [Mastodon (awoo.space)](https://awoo.space/@XerTheSquirrel)
   * [Twitter](https://twitter.com/MultiPhasicApps)
   * E-Mail: <xer@multiphasicapps.net>

## Goals

 * _To be self-hosting_ - it can build itself while running on itself, provided
   there is a filesystem and enough memory.
 * _To be small_ - Smaller programs are easier to maintain and are usually
   simpler.
 * _To be fast_ - With the potential of AOT/JIT, systems that do not normally
   have a port of an existing virtual machine will usually only have an
   interpreter.
 * _To be compatible_ - So that existing Java ME 8 applications can run on this
   virtual machine, along with J2ME applications when required. This has the
   added bonus of allowing one to use older software to catalog for
   preservation.
 * _To compile once and run anywhere_ - Current and up to date Java
   implementations are limited only to a few select systems (_Solaris_,
   _Linux_, _BSD_, _Mac OS X_, and _Windows_). Java ME 8 as of this writing
   only supports the *FRDM-K64F* and the *Raspberry Pi*. There are multitudes
   of devices that support **J2ME**, however that is horribly out of date when
   compared with the Java that is used today (**J2ME** is equal to Java 1.4
   which was released in _2002_).

## Donations

You may donate to SquirrelJME to which would be used by the author to keep the
web server online, the purchasing of new hardware/software, and for the
purchasing of food items for consumption.

 * [Ko-Fi](http://ko-fi.com/xerthesquirrel)
 * [Patreon](https://www.patreon.com/SquirrelJME)
 * BitCoin (**BTC/XBT**): [`3NEF6Pyt2JfWnb6hn7WFcwH5jpkHYPkTNj`](
   bitcoin:3NEF6Pyt2JfWnb6hn7WFcwH5jpkHYPkTNj)
 * BitCoin Cash (**BCH**): [`qrgww4z9aalgxyyddh5ax8jyy34c89phxuklp3hcwd`](
   bitcoincash:qrgww4z9aalgxyyddh5ax8jyy34c89phxuklp3hcwd)
 * Ethereum (**ETH**): [`0x7C2316f5336C63855C199784a6e145921145B74a`](
   ethereum:0x7C2316f5336C63855C199784a6e145921145B74a)
 * Ethereum Classic (**ETC**): [`0x1b30e6411bd7da6dd72cA35dabD5b98BA25A0Ae7`](
   ethereum:0x1b30e6411bd7da6dd72cA35dabD5b98BA25A0Ae7)
 * LiteCoin (**LTC**): [`MAogNXdjPQ7ZABtpeXztCHf4UXvfiwTuGX`](
   litecoin:MAogNXdjPQ7ZABtpeXztCHf4UXvfiwTuGX)
 * Stellar Lumens (**XLM**):
   `GB4O2MAMTINKS6GM6RH34KO32TJMF4QZKZTFJBE4HIPFMKRBXFQ7IAF6`.

## Important Statements

***JAVA AND ALL OTHER RELATED TRADEMARKS AND COPYRIGHTS ARE OWNED BY ORACLE
CORPORATION <http://www.oracle.com/>.***

***SQUIRRELJME IS NEITHER PRODUCED BY NOR ENDORSED BY ORACLE CORPORATION.***

***ALL SOURCE CODE IS WRITTEN BY MYSELF WITH FUNCTIONALITY DETERMINED BY THE
DOCUMENTED APIS AND RUN-TIME BEHAVIOR. I HAVE NOT LOOKED AT THE SOURCE CODE FOR
OTHER IMPLEMENTATIONS, NEITHER FREE SOFTWARE NOR PROPRIETARY IMPLEMENTATIONS.
ESSENTIALLY SQUIRRELJME IS A CLEAN-ROOM IMPLEMENTATION OF THE DESIGN OF JAVA
ME 8. THE IMPLEMENTATIONS OF THE JAVA ME 8
APIS AND ASSOCIATED JSRS/JEPS IS CONSIDERED BY MYSELF TO BE IN THE FAIR USE
(AND IT ALSO HELPS THE JAVA ECOSYSTEM BY PERMITTING IT TO RUN IN MORE PLACES
WHERE IT IS NOT SUPPORTED BY ORACLE).***

***THIS SOFTWARE IS INCOMPLETE AND IN ITS CURRENT STATE IS NOT CURRENTLY
100% COMPATIBLE WITH JAVA ME 8. THERE ARE CURRENTLY NO STABLE RELEASED VERSIONS
OF THIS SOFTWARE. AS SUCH THE FIRST MAJOR VERSION RELEASE WILL BE WHEN IT IS
COMPATIBLE SO AS TO NOT VIOLATE POTENTIAL LICENSES, AND IF POSSIBLE BE VERIFIED
WITH ANY APPLICABLE TCKS (SO IT WOULD BE AN "OFFICIAL" IMPLEMENTATION).***


